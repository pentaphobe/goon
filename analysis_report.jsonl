{"fileDetails":[{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.config.js","messages":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""},"debt":20},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "},"debt":20}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":40},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'globby' is assigned a value but never used.","line":8,"column":7,"nodeType":"Identifier","source":"const globby = require('globby')","endLine":8,"endColumn":13,"debt":10},{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 20 exceeds the maximum line length of 80.","line":20,"column":1,"nodeType":"Program","source":"  // const [major, minor, patch] = process.versions.node.split('.').map( n => parseInt(n, 10) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""},"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 54 exceeds the maximum line length of 80.","line":54,"column":1,"nodeType":"Program","source":"    let list = unweightedRules[message.ruleId] || (unweightedRules[message.ruleId] = [])","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""},"debt":20},{"ruleId":"no-unused-vars","severity":2,"message":"'cwd' is assigned a value but never used.","line":123,"column":9,"nodeType":"Identifier","source":"    let cwd = process.cwd()","endLine":123,"endColumn":12,"debt":10},{"ruleId":"max-len","severity":2,"message":"Line 136 exceeds the maximum line length of 80.","line":136,"column":1,"nodeType":"Program","source":"    //   fileDetails: eslintResults.results.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 172 exceeds the maximum line length of 80.","line":172,"column":1,"nodeType":"Program","source":"//       // fileDetails: allResults.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 186 exceeds the maximum line length of 80.","line":186,"column":1,"nodeType":"Program","source":"        `${chalk.yellow(path.relative(__dirname, fileDetail.filePath))} ${message.line}:${message.column}`,","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 217 exceeds the maximum line length of 80.","line":217,"column":1,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : chalk.bold.green(delta)","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "},"debt":20},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":229,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5569,5569],"text":" "},"debt":20},{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":235,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5707,5708],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 239 exceeds the maximum line length of 80.","line":239,"column":1,"nodeType":"Program","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","debt":1},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":239,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5790,5790],"text":" "},"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":252,"column":1,"nodeType":"Program","source":"","endLine":254,"endColumn":1,"fix":{"range":[6194,6195],"text":""},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":258,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":258,"endColumn":14,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 264 exceeds the maximum line length of 80.","line":264,"column":1,"nodeType":"Program","source":"TOTAL DEBT:  ${chalk.bold(total)} (${esl.totals.errorCount} errors & ${esl.totals.warningCount} warnings)","debt":1},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":270,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":270,"endColumn":16,"debt":20},{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":275,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6866,6868],"text":"\n"},"debt":20}],"errorCount":47,"warningCount":0,"fixableErrorCount":33,"fixableWarningCount":0,"debt":768},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/tests/Component.js","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'react'.","line":1,"column":19,"nodeType":"Literal","source":"import React from 'react'","endLine":1,"endColumn":26,"debt":100},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"},"debt":20},{"ruleId":"jsx-quotes","severity":2,"message":"Unexpected usage of doublequote.","line":35,"column":35,"nodeType":"Literal","source":"      <InlineConditionals heading=\"hi there\" />","endLine":35,"endColumn":45,"fix":{"range":[636,646],"text":"'hi there'"},"debt":1}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":121}],"totals":{"errorCount":52,"warningCount":0,"debt":929},"unweightedRules":{"no-multiple-empty-lines":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":252,"column":1,"nodeType":"Program","source":"","endLine":254,"endColumn":1,"fix":{"range":[6194,6195],"text":""}}],"key-spacing":[{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "}},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":239,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5790,5790],"text":" "}}],"camelcase":[{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31}],"space-in-parens":[{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""}}],"indent":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : chalk.bold.green(delta)","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "}}],"no-console":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":258,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":258,"endColumn":14},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":270,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":270,"endColumn":16}],"space-before-function-paren":[{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":229,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5569,5569],"text":" "}}],"comma-dangle":[{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":235,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5707,5708],"text":""}}],"padded-blocks":[{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":275,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6866,6868],"text":"\n"}}],"react/self-closing-comp":[{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"}}]},"date":"2018-03-21T07:16:02.836Z"}

{"fileDetails":[{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.config.js","messages":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""},"debt":20},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "},"debt":20}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":40},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'globby' is assigned a value but never used.","line":8,"column":7,"nodeType":"Identifier","source":"const globby = require('globby')","endLine":8,"endColumn":13,"debt":10},{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 20 exceeds the maximum line length of 80.","line":20,"column":1,"nodeType":"Program","source":"  // const [major, minor, patch] = process.versions.node.split('.').map( n => parseInt(n, 10) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""},"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 54 exceeds the maximum line length of 80.","line":54,"column":1,"nodeType":"Program","source":"    let list = unweightedRules[message.ruleId] || (unweightedRules[message.ruleId] = [])","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""},"debt":20},{"ruleId":"no-unused-vars","severity":2,"message":"'cwd' is assigned a value but never used.","line":123,"column":9,"nodeType":"Identifier","source":"    let cwd = process.cwd()","endLine":123,"endColumn":12,"debt":10},{"ruleId":"max-len","severity":2,"message":"Line 136 exceeds the maximum line length of 80.","line":136,"column":1,"nodeType":"Program","source":"    //   fileDetails: eslintResults.results.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 172 exceeds the maximum line length of 80.","line":172,"column":1,"nodeType":"Program","source":"//       // fileDetails: allResults.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 186 exceeds the maximum line length of 80.","line":186,"column":1,"nodeType":"Program","source":"        `${chalk.yellow(path.relative(__dirname, fileDetail.filePath))} ${message.line}:${message.column}`,","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 217 exceeds the maximum line length of 80.","line":217,"column":1,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : chalk.bold.green(delta)","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "},"debt":20},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":229,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5569,5569],"text":" "},"debt":20},{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":235,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5707,5708],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 239 exceeds the maximum line length of 80.","line":239,"column":1,"nodeType":"Program","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","debt":1},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":239,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5790,5790],"text":" "},"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":252,"column":1,"nodeType":"Program","source":"","endLine":254,"endColumn":1,"fix":{"range":[6194,6195],"text":""},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":258,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":258,"endColumn":14,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 264 exceeds the maximum line length of 80.","line":264,"column":1,"nodeType":"Program","source":"TOTAL DEBT:  ${chalk.bold(total)} (${esl.totals.errorCount} errors & ${esl.totals.warningCount} warnings)","debt":1},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":270,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":270,"endColumn":16,"debt":20},{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":275,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6866,6868],"text":"\n"},"debt":20}],"errorCount":47,"warningCount":0,"fixableErrorCount":33,"fixableWarningCount":0,"debt":768},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/tests/Component.js","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'react'.","line":1,"column":19,"nodeType":"Literal","source":"import React from 'react'","endLine":1,"endColumn":26,"debt":100},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"},"debt":20},{"ruleId":"jsx-quotes","severity":2,"message":"Unexpected usage of doublequote.","line":35,"column":35,"nodeType":"Literal","source":"      <InlineConditionals heading=\"hi there\" />","endLine":35,"endColumn":45,"fix":{"range":[636,646],"text":"'hi there'"},"debt":1}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":121}],"totals":{"errorCount":52,"warningCount":0,"debt":929},"unweightedRules":{"no-multiple-empty-lines":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":252,"column":1,"nodeType":"Program","source":"","endLine":254,"endColumn":1,"fix":{"range":[6194,6195],"text":""}}],"key-spacing":[{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "}},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":239,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5790,5790],"text":" "}}],"camelcase":[{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31}],"space-in-parens":[{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""}}],"indent":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : chalk.bold.green(delta)","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "}}],"no-console":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":258,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":258,"endColumn":14},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":270,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":270,"endColumn":16}],"space-before-function-paren":[{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":229,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5569,5569],"text":" "}}],"comma-dangle":[{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":235,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5707,5708],"text":""}}],"padded-blocks":[{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":275,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6866,6868],"text":"\n"}}],"react/self-closing-comp":[{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"}}]},"date":"2018-03-21T07:16:18.801Z"}
{"fileDetails":[{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.config.js","messages":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""},"debt":20},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "},"debt":20}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":40},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'globby' is assigned a value but never used.","line":8,"column":7,"nodeType":"Identifier","source":"const globby = require('globby')","endLine":8,"endColumn":13,"debt":10},{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 20 exceeds the maximum line length of 80.","line":20,"column":1,"nodeType":"Program","source":"  // const [major, minor, patch] = process.versions.node.split('.').map( n => parseInt(n, 10) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""},"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 54 exceeds the maximum line length of 80.","line":54,"column":1,"nodeType":"Program","source":"    let list = unweightedRules[message.ruleId] || (unweightedRules[message.ruleId] = [])","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""},"debt":20},{"ruleId":"no-unused-vars","severity":2,"message":"'cwd' is assigned a value but never used.","line":123,"column":9,"nodeType":"Identifier","source":"    let cwd = process.cwd()","endLine":123,"endColumn":12,"debt":10},{"ruleId":"max-len","severity":2,"message":"Line 136 exceeds the maximum line length of 80.","line":136,"column":1,"nodeType":"Program","source":"    //   fileDetails: eslintResults.results.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 172 exceeds the maximum line length of 80.","line":172,"column":1,"nodeType":"Program","source":"//       // fileDetails: allResults.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 186 exceeds the maximum line length of 80.","line":186,"column":1,"nodeType":"Program","source":"        `${chalk.yellow(path.relative(__dirname, fileDetail.filePath))} ${message.line}:${message.column}`,","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 217 exceeds the maximum line length of 80.","line":217,"column":1,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : chalk.bold.green(delta)","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "},"debt":20},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":229,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5569,5569],"text":" "},"debt":20},{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":235,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5707,5708],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 239 exceeds the maximum line length of 80.","line":239,"column":1,"nodeType":"Program","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","debt":1},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":239,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5790,5790],"text":" "},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":246,"column":3,"nodeType":"MemberExpression","source":"  console.log('last history', lastHistoryEntry)","messageId":"unexpected","endLine":246,"endColumn":14,"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":254,"column":1,"nodeType":"Program","source":"","endLine":256,"endColumn":1,"fix":{"range":[6243,6244],"text":""},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":260,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":260,"endColumn":14,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 266 exceeds the maximum line length of 80.","line":266,"column":1,"nodeType":"Program","source":"TOTAL DEBT:  ${chalk.bold(total)} (${esl.totals.errorCount} errors & ${esl.totals.warningCount} warnings)","debt":1},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":272,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":272,"endColumn":16,"debt":20},{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":277,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6915,6917],"text":"\n"},"debt":20}],"errorCount":48,"warningCount":0,"fixableErrorCount":33,"fixableWarningCount":0,"debt":788},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/tests/Component.js","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'react'.","line":1,"column":19,"nodeType":"Literal","source":"import React from 'react'","endLine":1,"endColumn":26,"debt":100},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"},"debt":20},{"ruleId":"jsx-quotes","severity":2,"message":"Unexpected usage of doublequote.","line":35,"column":35,"nodeType":"Literal","source":"      <InlineConditionals heading=\"hi there\" />","endLine":35,"endColumn":45,"fix":{"range":[636,646],"text":"'hi there'"},"debt":1}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":121}],"totals":{"errorCount":53,"warningCount":0,"debt":949},"unweightedRules":{"no-multiple-empty-lines":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":254,"column":1,"nodeType":"Program","source":"","endLine":256,"endColumn":1,"fix":{"range":[6243,6244],"text":""}}],"key-spacing":[{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "}},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":239,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5790,5790],"text":" "}}],"camelcase":[{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31}],"space-in-parens":[{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""}}],"indent":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : chalk.bold.green(delta)","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "}}],"no-console":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":246,"column":3,"nodeType":"MemberExpression","source":"  console.log('last history', lastHistoryEntry)","messageId":"unexpected","endLine":246,"endColumn":14},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":260,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":260,"endColumn":14},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":272,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":272,"endColumn":16}],"space-before-function-paren":[{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":229,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5569,5569],"text":" "}}],"comma-dangle":[{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":235,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5707,5708],"text":""}}],"padded-blocks":[{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":277,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6915,6917],"text":"\n"}}],"react/self-closing-comp":[{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"}}]},"date":"2018-03-21T07:16:46.723Z"}
{"fileDetails":[{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.config.js","messages":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""},"debt":20},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "},"debt":20}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":40},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'globby' is assigned a value but never used.","line":8,"column":7,"nodeType":"Identifier","source":"const globby = require('globby')","endLine":8,"endColumn":13,"debt":10},{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 20 exceeds the maximum line length of 80.","line":20,"column":1,"nodeType":"Program","source":"  // const [major, minor, patch] = process.versions.node.split('.').map( n => parseInt(n, 10) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""},"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 54 exceeds the maximum line length of 80.","line":54,"column":1,"nodeType":"Program","source":"    let list = unweightedRules[message.ruleId] || (unweightedRules[message.ruleId] = [])","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""},"debt":20},{"ruleId":"no-unused-vars","severity":2,"message":"'cwd' is assigned a value but never used.","line":123,"column":9,"nodeType":"Identifier","source":"    let cwd = process.cwd()","endLine":123,"endColumn":12,"debt":10},{"ruleId":"max-len","severity":2,"message":"Line 136 exceeds the maximum line length of 80.","line":136,"column":1,"nodeType":"Program","source":"    //   fileDetails: eslintResults.results.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 172 exceeds the maximum line length of 80.","line":172,"column":1,"nodeType":"Program","source":"//       // fileDetails: allResults.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 186 exceeds the maximum line length of 80.","line":186,"column":1,"nodeType":"Program","source":"        `${chalk.yellow(path.relative(__dirname, fileDetail.filePath))} ${message.line}:${message.column}`,","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 217 exceeds the maximum line length of 80.","line":217,"column":1,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : chalk.bold.green(delta)","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "},"debt":20},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":229,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5569,5569],"text":" "},"debt":20},{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":235,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5707,5708],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 239 exceeds the maximum line length of 80.","line":239,"column":1,"nodeType":"Program","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","debt":1},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":239,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5790,5790],"text":" "},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":246,"column":3,"nodeType":"MemberExpression","source":"  console.log('last history', lastHistoryEntry)","messageId":"unexpected","endLine":246,"endColumn":14,"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":254,"column":1,"nodeType":"Program","source":"","endLine":256,"endColumn":1,"fix":{"range":[6246,6247],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 258 exceeds the maximum line length of 80.","line":258,"column":1,"nodeType":"Program","source":"  let debtDelta = total - ((lastHistoryEntry && lastHistoryEntry.totals.debt) || 0)","debt":1},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":260,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":260,"endColumn":14,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 266 exceeds the maximum line length of 80.","line":266,"column":1,"nodeType":"Program","source":"TOTAL DEBT:  ${chalk.bold(total)} (${esl.totals.errorCount} errors & ${esl.totals.warningCount} warnings)","debt":1},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":272,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":272,"endColumn":16,"debt":20},{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":277,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6925,6927],"text":"\n"},"debt":20}],"errorCount":49,"warningCount":0,"fixableErrorCount":33,"fixableWarningCount":0,"debt":789},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/tests/Component.js","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'react'.","line":1,"column":19,"nodeType":"Literal","source":"import React from 'react'","endLine":1,"endColumn":26,"debt":100},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"},"debt":20},{"ruleId":"jsx-quotes","severity":2,"message":"Unexpected usage of doublequote.","line":35,"column":35,"nodeType":"Literal","source":"      <InlineConditionals heading=\"hi there\" />","endLine":35,"endColumn":45,"fix":{"range":[636,646],"text":"'hi there'"},"debt":1}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":121}],"totals":{"errorCount":54,"warningCount":0,"debt":950},"unweightedRules":{"no-multiple-empty-lines":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":254,"column":1,"nodeType":"Program","source":"","endLine":256,"endColumn":1,"fix":{"range":[6246,6247],"text":""}}],"key-spacing":[{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "}},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":239,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5790,5790],"text":" "}}],"camelcase":[{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31}],"space-in-parens":[{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""}}],"indent":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : chalk.bold.green(delta)","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "}}],"no-console":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":246,"column":3,"nodeType":"MemberExpression","source":"  console.log('last history', lastHistoryEntry)","messageId":"unexpected","endLine":246,"endColumn":14},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":260,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":260,"endColumn":14},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":272,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":272,"endColumn":16}],"space-before-function-paren":[{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":229,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5569,5569],"text":" "}}],"comma-dangle":[{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":235,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5707,5708],"text":""}}],"padded-blocks":[{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":277,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6925,6927],"text":"\n"}}],"react/self-closing-comp":[{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"}}]},"date":"2018-03-21T07:17:35.887Z"}
{"fileDetails":[{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.config.js","messages":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""},"debt":20},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "},"debt":20}],"errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":40},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/analysis.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'globby' is assigned a value but never used.","line":8,"column":7,"nodeType":"Identifier","source":"const globby = require('globby')","endLine":8,"endColumn":13,"debt":10},{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 20 exceeds the maximum line length of 80.","line":20,"column":1,"nodeType":"Program","source":"  // const [major, minor, patch] = process.versions.node.split('.').map( n => parseInt(n, 10) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""},"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 54 exceeds the maximum line length of 80.","line":54,"column":1,"nodeType":"Program","source":"    let list = unweightedRules[message.ruleId] || (unweightedRules[message.ruleId] = [])","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""},"debt":20},{"ruleId":"no-unused-vars","severity":2,"message":"'cwd' is assigned a value but never used.","line":123,"column":9,"nodeType":"Identifier","source":"    let cwd = process.cwd()","endLine":123,"endColumn":12,"debt":10},{"ruleId":"max-len","severity":2,"message":"Line 136 exceeds the maximum line length of 80.","line":136,"column":1,"nodeType":"Program","source":"    //   fileDetails: eslintResults.results.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 172 exceeds the maximum line length of 80.","line":172,"column":1,"nodeType":"Program","source":"//       // fileDetails: allResults.map( result => Object.assign({}, result, convertDebt(result)) ),","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 186 exceeds the maximum line length of 80.","line":186,"column":1,"nodeType":"Program","source":"        `${chalk.yellow(path.relative(__dirname, fileDetail.filePath))} ${message.line}:${message.column}`,","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "},"debt":20},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 217 exceeds the maximum line length of 80.","line":217,"column":1,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","debt":1},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""},"debt":20},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : delta === 0","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":228,"column":1,"nodeType":"Punctuator","source":"    ? chalk.bold.yellow(delta)","endLine":228,"endColumn":5,"fix":{"range":[5541,5545],"text":"      "},"debt":20},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":229,"column":1,"nodeType":"Punctuator","source":"    : chalk.bold.green(delta)","endLine":229,"endColumn":5,"fix":{"range":[5572,5576],"text":"      "},"debt":20},{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":231,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5618,5618],"text":" "},"debt":20},{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":237,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5756,5757],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 241 exceeds the maximum line length of 80.","line":241,"column":1,"nodeType":"Program","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","debt":1},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":241,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5839,5839],"text":" "},"debt":20},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":256,"column":1,"nodeType":"Program","source":"","endLine":258,"endColumn":1,"fix":{"range":[6298,6299],"text":""},"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 260 exceeds the maximum line length of 80.","line":260,"column":1,"nodeType":"Program","source":"  let debtDelta = total - ((lastHistoryEntry && lastHistoryEntry.totals.debt) || 0)","debt":1},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":262,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":262,"endColumn":14,"debt":20},{"ruleId":"max-len","severity":2,"message":"Line 268 exceeds the maximum line length of 80.","line":268,"column":1,"nodeType":"Program","source":"TOTAL DEBT:  ${chalk.bold(total)} (${esl.totals.errorCount} errors & ${esl.totals.warningCount} warnings)","debt":1},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":274,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":274,"endColumn":16,"debt":20},{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":279,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6977,6979],"text":"\n"},"debt":20}],"errorCount":50,"warningCount":0,"fixableErrorCount":35,"fixableWarningCount":0,"debt":809},{"filePath":"/Users/doppel/Documents/hw/anz/bbd-ui-uplift/analysis/tests/Component.js","messages":[{"ruleId":"import/no-unresolved","severity":2,"message":"Unable to resolve path to module 'react'.","line":1,"column":19,"nodeType":"Literal","source":"import React from 'react'","endLine":1,"endColumn":26,"debt":100},{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"},"debt":20},{"ruleId":"jsx-quotes","severity":2,"message":"Unexpected usage of doublequote.","line":35,"column":35,"nodeType":"Literal","source":"      <InlineConditionals heading=\"hi there\" />","endLine":35,"endColumn":45,"fix":{"range":[636,646],"text":"'hi there'"},"debt":1}],"errorCount":3,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"debt":121}],"totals":{"errorCount":55,"warningCount":0,"debt":970},"unweightedRules":{"no-multiple-empty-lines":[{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":40,"column":1,"nodeType":"Program","source":"","endLine":42,"endColumn":1,"fix":{"range":[541,542],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":28,"column":1,"nodeType":"Program","source":"","endLine":30,"endColumn":1,"fix":{"range":[799,800],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":147,"column":1,"nodeType":"Program","source":"","endLine":149,"endColumn":1,"fix":{"range":[3584,3585],"text":""}},{"ruleId":"no-multiple-empty-lines","severity":2,"message":"More than 1 blank line not allowed.","line":256,"column":1,"nodeType":"Program","source":"","endLine":258,"endColumn":1,"fix":{"range":[6298,6299],"text":""}}],"key-spacing":[{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'max'.","line":46,"column":36,"nodeType":"Literal","source":"      'complexity': ['error', {max:5}],","fix":{"range":[654,654],"text":" "}},{"ruleId":"key-spacing","severity":2,"message":"Missing space before value for key 'message'.","line":241,"column":71,"nodeType":"Literal","source":"  const userConfig = requireOptional('./analysis.config.js', {message:'no user config'})","fix":{"range":[5839,5839],"text":" "}}],"camelcase":[{"ruleId":"camelcase","severity":2,"message":"Identifier 'check_valid_node_version' is not in camel case.","line":19,"column":7,"nodeType":"Identifier","source":"const check_valid_node_version = () => {","messageId":"notCamelCase","endLine":19,"endColumn":31}],"space-in-parens":[{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":53,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[656,657],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":21,"column":76,"nodeType":"Program","source":"  const parts = process.versions.node.split('.').map( n => parseInt(n, 10) )","fix":{"range":[677,678],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":43,"column":51,"nodeType":"Program","source":"  const weightLookup = config.weights.rules.reduce( (accum, entry) => {","fix":{"range":[1207,1208],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":44,"column":24,"nodeType":"Program","source":"    entry.rules.forEach( rule => {","fix":{"range":[1252,1253],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":76,"column":42,"nodeType":"Program","source":"    let mappedMessages = obj.messages.map( message => {","fix":{"range":[1957,1958],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":92,"column":39,"nodeType":"Program","source":"  let summary = results.results.reduce( (accum, result) => {","fix":{"range":[2244,2245],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":183,"column":42,"nodeType":"Program","source":"  let report = results.fileDetails.reduce( (accum, fileDetail) => {","fix":{"range":[4490,4491],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":184,"column":48,"nodeType":"Program","source":"    return accum.concat(fileDetail.messages.map( message => {","fix":{"range":[4564,4565],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":10,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4843,4844],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":194,"column":44,"nodeType":"Program","source":"    ].map( title => chalk.cyan.bold(title) )","fix":{"range":[4875,4876],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":22,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5277,5278],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":59,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5314,5315],"text":""}},{"ruleId":"space-in-parens","severity":2,"message":"There should be no spaces inside this paren.","line":217,"column":86,"nodeType":"Program","source":"  return lines.filter( line => line.trim().length > 0).map( line => JSON.parse(line) )","fix":{"range":[5339,5340],"text":""}}],"indent":[{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":77,"column":1,"nodeType":"Keyword","source":"        let score = getRuleScore(message)","endLine":77,"endColumn":9,"fix":{"range":[1971,1979],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":79,"column":1,"nodeType":"Identifier","source":"        debtCount += score","endLine":79,"endColumn":9,"fix":{"range":[2014,2022],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":81,"column":1,"nodeType":"Keyword","source":"        return Object.assign({}, message, {","endLine":81,"endColumn":9,"fix":{"range":[2042,2050],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 10.","line":82,"column":1,"nodeType":"Identifier","source":"          debt: score","endLine":82,"endColumn":11,"fix":{"range":[2086,2096],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 8.","line":83,"column":1,"nodeType":"Punctuator","source":"        })","endLine":83,"endColumn":9,"fix":{"range":[2108,2116],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":200,"column":1,"nodeType":"Identifier","source":"  columns: {","endLine":200,"endColumn":3,"fix":{"range":[4929,4931],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":201,"column":1,"nodeType":"Numeric","source":"    2: {","endLine":201,"endColumn":5,"fix":{"range":[4942,4946],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 8 spaces but found 6.","line":202,"column":1,"nodeType":"Identifier","source":"      alignment: 'right'","endLine":202,"endColumn":7,"fix":{"range":[4951,4957],"text":"        "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":203,"column":1,"nodeType":"Punctuator","source":"    }","endLine":203,"endColumn":5,"fix":{"range":[4976,4980],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":204,"column":1,"nodeType":"Punctuator","source":"  }","endLine":204,"endColumn":3,"fix":{"range":[4982,4984],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 2 spaces but found 0.","line":205,"column":1,"nodeType":"Punctuator","source":"})}","endLine":205,"endColumn":1,"fix":{"range":[4986,4986],"text":"  "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":226,"column":1,"nodeType":"Punctuator","source":"  ? chalk.bold.red(`+${delta}`)","endLine":226,"endColumn":3,"fix":{"range":[5493,5495],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 4 spaces but found 2.","line":227,"column":1,"nodeType":"Punctuator","source":"  : delta === 0","endLine":227,"endColumn":3,"fix":{"range":[5525,5527],"text":"    "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":228,"column":1,"nodeType":"Punctuator","source":"    ? chalk.bold.yellow(delta)","endLine":228,"endColumn":5,"fix":{"range":[5541,5545],"text":"      "}},{"ruleId":"indent","severity":2,"message":"Expected indentation of 6 spaces but found 4.","line":229,"column":1,"nodeType":"Punctuator","source":"    : chalk.bold.green(delta)","endLine":229,"endColumn":5,"fix":{"range":[5572,5576],"text":"      "}}],"no-console":[{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":211,"column":5,"nodeType":"MemberExpression","source":"    console.log(`no history file found at: ${config.report}`)","messageId":"unexpected","endLine":211,"endColumn":16},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":262,"column":3,"nodeType":"MemberExpression","source":"  console.log(`","messageId":"unexpected","endLine":262,"endColumn":14},{"ruleId":"no-console","severity":2,"message":"Unexpected console statement.","line":274,"column":5,"nodeType":"MemberExpression","source":"    console.log(`writing new history log to ${config.report}...`)","messageId":"unexpected","endLine":274,"endColumn":16}],"space-before-function-paren":[{"ruleId":"space-before-function-paren","severity":2,"message":"Missing space before function parentheses.","line":231,"column":16,"nodeType":"FunctionExpression","source":";(function main() {","fix":{"range":[5618,5618],"text":" "}}],"comma-dangle":[{"ruleId":"comma-dangle","severity":2,"message":"Unexpected trailing comma.","line":237,"column":22,"nodeType":"Property","source":"      gitignore: true,","messageId":"unexpected","fix":{"range":[5756,5757],"text":""}}],"padded-blocks":[{"ruleId":"padded-blocks","severity":2,"message":"Block must not be padded by blank lines.","line":279,"column":1,"nodeType":"BlockStatement","source":"}())","fix":{"range":[6977,6979],"text":"\n"}}],"react/self-closing-comp":[{"ruleId":"react/self-closing-comp","severity":2,"message":"Empty components are self-closing","line":26,"column":5,"nodeType":"JSXOpeningElement","source":"    <div className='container__thing'>","endLine":26,"endColumn":39,"fix":{"range":[488,500],"text":" />"}}]},"date":"2018-03-21T07:18:32.124Z"}
